PROGRAM 1

import java.io.*;

class Student {
    private String name;
    private int age;

    public Student(String name, int age) {
        this.name = name;
        this.age = age;
    }

    // Getters and setters (if needed)
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }
}

public class StudentFileProcessing {
    public static void main(String[] args) {
        // Read student details from IN file, convert to lowercase, and write to OUT file
        try {
            FileReader inFile = new FileReader("IN.txt");
            BufferedReader reader = new BufferedReader(inFile);

            FileWriter outFile = new FileWriter("OUT.txt");

            String line;
            while ((line = reader.readLine()) != null) {
                // Split the line into name and age (assuming a specific format)
                String[] parts = line.split(",");
                if (parts.length == 2) {
                    String name = parts[0].toLowerCase(); // Convert name to lowercase
                    int age = Integer.parseInt(parts[1]);

                    Student student = new Student(name, age);

                    // Write the student details to the OUT file
                    outFile.write(student.getName() + "," + student.getAge() + "\n");
                }
            }

            inFile.close();
            outFile.close();

            System.out.println("Data written to OUT.txt successfully.");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}

PROGRAM 2
import java.io.*;
import java.util.*;

public class FileInfoReader {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the file name: ");
        String fileName = scanner.nextLine();

        File file = new File(fileName);

        // Check if the file exists
        if (file.exists()) {
            System.out.println("File exists.");

            // Check if the file is readable
            if (file.canRead()) {
                System.out.println("File is readable.");
            } else {
                System.out.println("File is not readable.");
            }

            // Check if the file is writable
            if (file.canWrite()) {
                System.out.println("File is writable.");
            } else {
                System.out.println("File is not writable.");
            }

            // Get the type of file
            if (file.isFile()) {
                System.out.println("File type: Regular file");
            } else if (file.isDirectory()) {
                System.out.println("File type: Directory");
            }

            // Get the length of the file in bytes
            System.out.println("File length (bytes): " + file.length());
        } else {
            System.out.println("File does not exist.");
        }

        scanner.close();
    }
}

PROGRAM 3

import java.io.*;

public class BinaryFileIOExample {
    public static void main(String[] args) {
        // Create a binary file using byte stream
        writeBinaryFileByteStream("binaryfile_byte.dat");

        // Read and display the binary file using character stream
        readBinaryFileCharacterStream("binaryfile_byte.dat");
    }

    // Write binary data to a file using byte stream
    public static void writeBinaryFileByteStream(String filename) {
        try (FileOutputStream fos = new FileOutputStream(filename);
             DataOutputStream dos = new DataOutputStream(fos)) {
            dos.writeInt(42); // Write an integer
            dos.writeDouble(3.141592); // Write a double
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    // Read and display binary data from a file using character stream
    public static void readBinaryFileCharacterStream(String filename) {
        try (FileInputStream fis = new FileInputStream(filename);
             DataInputStream dis = new DataInputStream(fis)) {
            int intValue = dis.readInt();
            double doubleValue = dis.readDouble();

            System.out.println("Read integer using character stream: " + intValue);
            System.out.println("Read double using character stream: " + doubleValue);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
